linking  obj/util.a ...
Util lib has been build into "obj/util.a"
linking  obj/spike_interface.a ...
Spike lib has been build into "obj/spike_interface.a"
linking obj/riscv-pke ...
PKE core has been built into "obj/riscv-pke"
linking obj/app_semaphore ...
User app has been built into "obj/app_semaphore"
********************HUST PKE********************
spike obj/riscv-pke obj/app_semaphore
HTIF is available!
(Emulated) memory size: 2048 MB
In m_start, hartid:0
Enter supervisor mode...
PKE kernel start 0x0000000080000000, PKE kernel end: 0x0000000080074000, PKE kernel size: 0x0000000000074000 .
free physical memory address: [0x0000000080074000, 0x0000000087ffffff] 
kernel memory manager is initializing ...
KERN_BASE 0x0000000080000000
physical address of _etext is: 0x0000000080008000
kernel page table is on 
Switch to user mode...
User application is loading.
Application: obj/app_semaphore
CODE_SEGMENT added at mapped info offset:4
Application program entry point (virtual address): 0x00000000000100e8
going to insert process 0 to ready queue.
going to schedule process 0 to run.
User call fork.
will fork a child from parent 0.
going to insert process 1 to ready queue.
calling sem_P index = 1
Parent print 0

calling sem_P index = 1
going to schedule process 1 to run.
User call fork.
will fork a child from parent 1.
going to insert process 2 to ready queue.
calling sem_P index = 2
Child0 print 0

calling sem_P index = 2
going to schedule process 2 to run.
calling sem_P index = 3
Child1 print 0

going to insert process 0 to ready queue.
Parent print 1

going to insert process 1 to ready queue.
Child0 print 1

calling sem_P index = 2
ready queue empty, but process 0 is not in free/zombie state:2
ready queue empty, but process 1 is not in free/zombie state:3
ready queue empty, but process 2 is not in free/zombie state:2
Not handled: we should let system wait for unfinished processes.

System is shutting down with exit code -1.
linking  obj/util.a ...
Util lib has been build into "obj/util.a"
linking  obj/spike_interface.a ...
Spike lib has been build into "obj/spike_interface.a"
compiling kernel/semaphore.c
linking obj/riscv-pke ...
PKE core has been built into "obj/riscv-pke"
linking obj/app_semaphore ...
User app has been built into "obj/app_semaphore"
********************HUST PKE********************
spike obj/riscv-pke obj/app_semaphore
HTIF is available!
(Emulated) memory size: 2048 MB
In m_start, hartid:0
Enter supervisor mode...
PKE kernel start 0x0000000080000000, PKE kernel end: 0x0000000080074000, PKE kernel size: 0x0000000000074000 .
free physical memory address: [0x0000000080074000, 0x0000000087ffffff] 
kernel memory manager is initializing ...
KERN_BASE 0x0000000080000000
physical address of _etext is: 0x0000000080008000
kernel page table is on 
Switch to user mode...
User application is loading.
Application: obj/app_semaphore
CODE_SEGMENT added at mapped info offset:4
Application program entry point (virtual address): 0x00000000000100e8
going to insert process 0 to ready queue.
going to schedule process 0 to run.
User call fork.
will fork a child from parent 0.
going to insert process 1 to ready queue.
calling sem_P index = 1
Parent print 0

received sem_V signal, sem_index=2
calling sem_P index = 1
going to schedule process 1 to run.
User call fork.
will fork a child from parent 1.
going to insert process 2 to ready queue.
calling sem_P index = 2
Child0 print 0

received sem_V signal, sem_index=3
calling sem_P index = 2
going to schedule process 2 to run.
calling sem_P index = 3
Child1 print 0

received sem_V signal, sem_index=1
going to insert process 0 to ready queue.
Parent print 1

received sem_V signal, sem_index=2
going to insert process 1 to ready queue.
Child0 print 1

received sem_V signal, sem_index=3
calling sem_P index = 2
ready queue empty, but process 0 is not in free/zombie state:2
ready queue empty, but process 1 is not in free/zombie state:3
ready queue empty, but process 2 is not in free/zombie state:2
Not handled: we should let system wait for unfinished processes.

System is shutting down with exit code -1.
linking  obj/util.a ...
Util lib has been build into "obj/util.a"
linking  obj/spike_interface.a ...
Spike lib has been build into "obj/spike_interface.a"
linking obj/riscv-pke ...
PKE core has been built into "obj/riscv-pke"
linking obj/app_semaphore ...
User app has been built into "obj/app_semaphore"
********************HUST PKE********************
spike obj/riscv-pke obj/app_semaphore
HTIF is available!
(Emulated) memory size: 2048 MB
In m_start, hartid:0
Enter supervisor mode...
PKE kernel start 0x0000000080000000, PKE kernel end: 0x0000000080074000, PKE kernel size: 0x0000000000074000 .
free physical memory address: [0x0000000080074000, 0x0000000087ffffff] 
kernel memory manager is initializing ...
KERN_BASE 0x0000000080000000
physical address of _etext is: 0x0000000080008000
kernel page table is on 
Switch to user mode...
User application is loading.
Application: obj/app_semaphore
CODE_SEGMENT added at mapped info offset:4
Application program entry point (virtual address): 0x00000000000100e8
going to insert process 0 to ready queue.
going to schedule process 0 to run.
User call fork.
will fork a child from parent 0.
going to insert process 1 to ready queue.
calling sem_P index = 1
Parent print 0

received sem_V signal, sem_index=2
calling sem_P index = 1
sem 1 is queueing: 0
going to schedule process 1 to run.
User call fork.
will fork a child from parent 1.
going to insert process 2 to ready queue.
calling sem_P index = 2
Child0 print 0

received sem_V signal, sem_index=3
calling sem_P index = 2
sem 2 is queueing: 1
going to schedule process 2 to run.
calling sem_P index = 3
Child1 print 0

received sem_V signal, sem_index=1
calling sem_P index = 3
sem 3 is queueing: 2
ready queue empty, but process 0 is not in free/zombie state:3
ready queue empty, but process 1 is not in free/zombie state:3
ready queue empty, but process 2 is not in free/zombie state:3
Not handled: we should let system wait for unfinished processes.

System is shutting down with exit code -1.
linking  obj/util.a ...
Util lib has been build into "obj/util.a"
linking  obj/spike_interface.a ...
Spike lib has been build into "obj/spike_interface.a"
compiling kernel/semaphore.c
linking obj/riscv-pke ...
PKE core has been built into "obj/riscv-pke"
linking obj/app_semaphore ...
User app has been built into "obj/app_semaphore"
********************HUST PKE********************
spike obj/riscv-pke obj/app_semaphore
HTIF is available!
(Emulated) memory size: 2048 MB
In m_start, hartid:0
Enter supervisor mode...
PKE kernel start 0x0000000080000000, PKE kernel end: 0x0000000080074000, PKE kernel size: 0x0000000000074000 .
free physical memory address: [0x0000000080074000, 0x0000000087ffffff] 
kernel memory manager is initializing ...
KERN_BASE 0x0000000080000000
physical address of _etext is: 0x0000000080008000
kernel page table is on 
Switch to user mode...
User application is loading.
Application: obj/app_semaphore
CODE_SEGMENT added at mapped info offset:4
Application program entry point (virtual address): 0x00000000000100e8
going to insert process 0 to ready queue.
going to schedule process 0 to run.
User call fork.
will fork a child from parent 0.
going to insert process 1 to ready queue.
Received calling sem_P index = 1
Parent print 0

Received sem_V signal, sem_index=2
sem 2 is queueing: 
Received calling sem_P index = 1
sem 1 is queueing: 0
going to schedule process 1 to run.
User call fork.
will fork a child from parent 1.
going to insert process 2 to ready queue.
Received calling sem_P index = 2
Child0 print 0

Received sem_V signal, sem_index=3
sem 3 is queueing: 
Received calling sem_P index = 2
sem 2 is queueing: 1
going to schedule process 2 to run.
Received calling sem_P index = 3
Child1 print 0

Received sem_V signal, sem_index=1
sem 1 is queueing: 
Received calling sem_P index = 3
sem 3 is queueing: 2
ready queue empty, but process 0 is not in free/zombie state:3
ready queue empty, but process 1 is not in free/zombie state:3
ready queue empty, but process 2 is not in free/zombie state:3
Not handled: we should let system wait for unfinished processes.

System is shutting down with exit code -1.
linking  obj/util.a ...
Util lib has been build into "obj/util.a"
linking  obj/spike_interface.a ...
Spike lib has been build into "obj/spike_interface.a"
compiling kernel/semaphore.c
linking obj/riscv-pke ...
PKE core has been built into "obj/riscv-pke"
linking obj/app_semaphore ...
User app has been built into "obj/app_semaphore"
********************HUST PKE********************
spike obj/riscv-pke obj/app_semaphore
HTIF is available!
(Emulated) memory size: 2048 MB
In m_start, hartid:0
Enter supervisor mode...
PKE kernel start 0x0000000080000000, PKE kernel end: 0x0000000080074000, PKE kernel size: 0x0000000000074000 .
free physical memory address: [0x0000000080074000, 0x0000000087ffffff] 
kernel memory manager is initializing ...
KERN_BASE 0x0000000080000000
physical address of _etext is: 0x0000000080008000
kernel page table is on 
Switch to user mode...
User application is loading.
Application: obj/app_semaphore
CODE_SEGMENT added at mapped info offset:4
Application program entry point (virtual address): 0x00000000000100e8
going to insert process 0 to ready queue.
going to schedule process 0 to run.
User call fork.
will fork a child from parent 0.
going to insert process 1 to ready queue.
Received calling sem_P index = 1
Parent print 0

Received sem_V signal, sem_index=2
sem 2 is queueing: 
Received calling sem_P index = 1
sem 1 is queueing: 0
going to schedule process 1 to run.
User call fork.
will fork a child from parent 1.
going to insert process 2 to ready queue.
Received calling sem_P index = 2
Child0 print 0

Received sem_V signal, sem_index=3
sem 3 is queueing: 
Received calling sem_P index = 2
sem 2 is queueing: 1
going to schedule process 2 to run.
Received calling sem_P index = 3
Child1 print 0

Received sem_V signal, sem_index=1
sem 1 is queueing: 0
going to insert process 0 to ready queue.
Parent print 1

Received sem_V signal, sem_index=2
sem 2 is queueing: 1
going to insert process 1 to ready queue.
Child0 print 1

Received sem_V signal, sem_index=3
sem 3 is queueing: 
Received calling sem_P index = 2
sem 2 is queueing: 1
ready queue empty, but process 0 is not in free/zombie state:2
ready queue empty, but process 1 is not in free/zombie state:3
ready queue empty, but process 2 is not in free/zombie state:2
Not handled: we should let system wait for unfinished processes.

System is shutting down with exit code -1.
linking  obj/util.a ...
Util lib has been build into "obj/util.a"
linking  obj/spike_interface.a ...
Spike lib has been build into "obj/spike_interface.a"
compiling kernel/semaphore.c
linking obj/riscv-pke ...
PKE core has been built into "obj/riscv-pke"
linking obj/app_semaphore ...
User app has been built into "obj/app_semaphore"
********************HUST PKE********************
spike obj/riscv-pke obj/app_semaphore
HTIF is available!
(Emulated) memory size: 2048 MB
In m_start, hartid:0
Enter supervisor mode...
PKE kernel start 0x0000000080000000, PKE kernel end: 0x0000000080074000, PKE kernel size: 0x0000000000074000 .
free physical memory address: [0x0000000080074000, 0x0000000087ffffff] 
kernel memory manager is initializing ...
KERN_BASE 0x0000000080000000
physical address of _etext is: 0x0000000080008000
kernel page table is on 
Switch to user mode...
User application is loading.
Application: obj/app_semaphore
CODE_SEGMENT added at mapped info offset:4
Application program entry point (virtual address): 0x00000000000100e8
going to insert process 0 to ready queue.
going to schedule process 0 to run.
User call fork.
will fork a child from parent 0.
going to insert process 1 to ready queue.
Received calling sem_P index = 1
Parent print 0

Received sem_V signal, sem_index=2, queue: 

Received calling sem_P index = 1
sem 1 is queueing: 0
going to schedule process 1 to run.
User call fork.
will fork a child from parent 1.
going to insert process 2 to ready queue.
Received calling sem_P index = 2
Child0 print 0

Received sem_V signal, sem_index=3, queue: 

Received calling sem_P index = 2
sem 2 is queueing: 1
going to schedule process 2 to run.
Received calling sem_P index = 3
Child1 print 0

Received sem_V signal, sem_index=1, queue: 
0
going to insert process 0 to ready queue.
Parent print 1

Received sem_V signal, sem_index=2, queue: 
1
going to insert process 1 to ready queue.
Child0 print 1

Received sem_V signal, sem_index=3, queue: 

Received calling sem_P index = 2
sem 2 is queueing: 1
ready queue empty, but process 0 is not in free/zombie state:2
ready queue empty, but process 1 is not in free/zombie state:3
ready queue empty, but process 2 is not in free/zombie state:2
Not handled: we should let system wait for unfinished processes.

System is shutting down with exit code -1.
linking  obj/util.a ...
Util lib has been build into "obj/util.a"
linking  obj/spike_interface.a ...
Spike lib has been build into "obj/spike_interface.a"
compiling kernel/semaphore.c
linking obj/riscv-pke ...
PKE core has been built into "obj/riscv-pke"
linking obj/app_semaphore ...
User app has been built into "obj/app_semaphore"
********************HUST PKE********************
spike obj/riscv-pke obj/app_semaphore
HTIF is available!
(Emulated) memory size: 2048 MB
In m_start, hartid:0
Enter supervisor mode...
PKE kernel start 0x0000000080000000, PKE kernel end: 0x0000000080074000, PKE kernel size: 0x0000000000074000 .
free physical memory address: [0x0000000080074000, 0x0000000087ffffff] 
kernel memory manager is initializing ...
KERN_BASE 0x0000000080000000
physical address of _etext is: 0x0000000080008000
kernel page table is on 
Switch to user mode...
User application is loading.
Application: obj/app_semaphore
CODE_SEGMENT added at mapped info offset:4
Application program entry point (virtual address): 0x00000000000100e8
going to insert process 0 to ready queue.
going to schedule process 0 to run.
User call fork.
will fork a child from parent 0.
going to insert process 1 to ready queue.
Received calling sem_P index = 1
Parent print 0

Received sem_V signal, sem_index=2, queue: 
Received calling sem_P index = 1
sem 1 is queueing: 0
going to schedule process 1 to run.
User call fork.
will fork a child from parent 1.
going to insert process 2 to ready queue.
Received calling sem_P index = 2
Child0 print 0

Received sem_V signal, sem_index=3, queue: 
Received calling sem_P index = 2
sem 2 is queueing: 1
going to schedule process 2 to run.
Received calling sem_P index = 3
Child1 print 0

Received sem_V signal, sem_index=1, queue: 0
going to insert process 0 to ready queue.
Parent print 1

Received sem_V signal, sem_index=2, queue: 1
going to insert process 1 to ready queue.
Child0 print 1

Received sem_V signal, sem_index=3, queue: 
Received calling sem_P index = 2
sem 2 is queueing: 1
ready queue empty, but process 0 is not in free/zombie state:2
ready queue empty, but process 1 is not in free/zombie state:3
ready queue empty, but process 2 is not in free/zombie state:2
Not handled: we should let system wait for unfinished processes.

System is shutting down with exit code -1.
linking  obj/util.a ...
Util lib has been build into "obj/util.a"
linking  obj/spike_interface.a ...
Spike lib has been build into "obj/spike_interface.a"
compiling kernel/semaphore.c
linking obj/riscv-pke ...
PKE core has been built into "obj/riscv-pke"
linking obj/app_semaphore ...
User app has been built into "obj/app_semaphore"
********************HUST PKE********************
spike obj/riscv-pke obj/app_semaphore
HTIF is available!
(Emulated) memory size: 2048 MB
In m_start, hartid:0
Enter supervisor mode...
PKE kernel start 0x0000000080000000, PKE kernel end: 0x0000000080074000, PKE kernel size: 0x0000000000074000 .
free physical memory address: [0x0000000080074000, 0x0000000087ffffff] 
kernel memory manager is initializing ...
KERN_BASE 0x0000000080000000
physical address of _etext is: 0x0000000080008000
kernel page table is on 
Switch to user mode...
User application is loading.
Application: obj/app_semaphore
CODE_SEGMENT added at mapped info offset:4
Application program entry point (virtual address): 0x00000000000100e8
going to insert process 0 to ready queue.
going to schedule process 0 to run.
User call fork.
will fork a child from parent 0.
going to insert process 1 to ready queue.
Received calling sem_P index = 1
Parent print 0

Received sem_V signal, sem_index=1, value = 2, queue: 
Received calling sem_P index = 1
sem 1 is queueing: 0
going to schedule process 1 to run.
User call fork.
will fork a child from parent 1.
going to insert process 2 to ready queue.
Received calling sem_P index = 2
Child0 print 0

Received sem_V signal, sem_index=1, value = 3, queue: 
Received calling sem_P index = 2
sem 2 is queueing: 1
going to schedule process 2 to run.
Received calling sem_P index = 3
Child1 print 0

Received sem_V signal, sem_index=1, value = 1, queue: 0
going to insert process 0 to ready queue.
Parent print 1

Received sem_V signal, sem_index=1, value = 2, queue: 1
going to insert process 1 to ready queue.
Child0 print 1

Received sem_V signal, sem_index=1, value = 3, queue: 
Received calling sem_P index = 2
sem 2 is queueing: 1
ready queue empty, but process 0 is not in free/zombie state:2
ready queue empty, but process 1 is not in free/zombie state:3
ready queue empty, but process 2 is not in free/zombie state:2
Not handled: we should let system wait for unfinished processes.

System is shutting down with exit code -1.
linking  obj/util.a ...
Util lib has been build into "obj/util.a"
linking  obj/spike_interface.a ...
Spike lib has been build into "obj/spike_interface.a"
linking obj/riscv-pke ...
PKE core has been built into "obj/riscv-pke"
compiling user/app_semaphore.c
linking obj/app_semaphore ...
User app has been built into "obj/app_semaphore"
********************HUST PKE********************
spike obj/riscv-pke obj/app_semaphore
HTIF is available!
(Emulated) memory size: 2048 MB
In m_start, hartid:0
Enter supervisor mode...
PKE kernel start 0x0000000080000000, PKE kernel end: 0x0000000080074000, PKE kernel size: 0x0000000000074000 .
free physical memory address: [0x0000000080074000, 0x0000000087ffffff] 
kernel memory manager is initializing ...
KERN_BASE 0x0000000080000000
physical address of _etext is: 0x0000000080008000
kernel page table is on 
Switch to user mode...
User application is loading.
Application: obj/app_semaphore
CODE_SEGMENT added at mapped info offset:4
Application program entry point (virtual address): 0x00000000000100e8
going to insert process 0 to ready queue.
going to schedule process 0 to run.
1 2 3

User call fork.
will fork a child from parent 0.
going to insert process 1 to ready queue.
Received calling sem_P index = 1
Parent print 0

Received sem_V signal, sem_index=1, value = 2, queue: 
Received calling sem_P index = 1
sem 1 is queueing: 0
going to schedule process 1 to run.
User call fork.
will fork a child from parent 1.
going to insert process 2 to ready queue.
Received calling sem_P index = 2
Child0 print 0

Received sem_V signal, sem_index=1, value = 3, queue: 
Received calling sem_P index = 2
sem 2 is queueing: 1
going to schedule process 2 to run.
Received calling sem_P index = 3
Child1 print 0

Received sem_V signal, sem_index=1, value = 1, queue: 0
going to insert process 0 to ready queue.
Parent print 1

Received sem_V signal, sem_index=1, value = 2, queue: 1
going to insert process 1 to ready queue.
Child0 print 1

Received sem_V signal, sem_index=1, value = 3, queue: 
Received calling sem_P index = 2
sem 2 is queueing: 1
ready queue empty, but process 0 is not in free/zombie state:2
ready queue empty, but process 1 is not in free/zombie state:3
ready queue empty, but process 2 is not in free/zombie state:2
Not handled: we should let system wait for unfinished processes.

System is shutting down with exit code -1.
linking  obj/util.a ...
Util lib has been build into "obj/util.a"
linking  obj/spike_interface.a ...
Spike lib has been build into "obj/spike_interface.a"
compiling kernel/semaphore.c
compiling kernel/syscall.c
linking obj/riscv-pke ...
PKE core has been built into "obj/riscv-pke"
linking obj/app_semaphore ...
User app has been built into "obj/app_semaphore"
********************HUST PKE********************
spike obj/riscv-pke obj/app_semaphore
HTIF is available!
(Emulated) memory size: 2048 MB
In m_start, hartid:0
Enter supervisor mode...
PKE kernel start 0x0000000080000000, PKE kernel end: 0x0000000080074000, PKE kernel size: 0x0000000000074000 .
free physical memory address: [0x0000000080074000, 0x0000000087ffffff] 
kernel memory manager is initializing ...
KERN_BASE 0x0000000080000000
physical address of _etext is: 0x0000000080008000
kernel page table is on 
Switch to user mode...
sem 0 initialvalue 0
User application is loading.
Application: obj/app_semaphore
CODE_SEGMENT added at mapped info offset:4
Application program entry point (virtual address): 0x00000000000100e8
going to insert process 0 to ready queue.
going to schedule process 0 to run.
sem 1 initialvalue 1
sem 2 initialvalue 0
sem 3 initialvalue 0
1 2 3

User call fork.
will fork a child from parent 0.
sem 4 initialvalue 0
going to insert process 1 to ready queue.
Received calling sem_P index = 1
Parent print 0

Received sem_V signal, sem_index=1, value = 2, queue: 
Received calling sem_P index = 1
sem 1 is queueing: 0
going to schedule process 1 to run.
User call fork.
will fork a child from parent 1.
sem 5 initialvalue 0
going to insert process 2 to ready queue.
Received calling sem_P index = 2
Child0 print 0

Received sem_V signal, sem_index=1, value = 3, queue: 
Received calling sem_P index = 2
sem 2 is queueing: 1
going to schedule process 2 to run.
Received calling sem_P index = 3
Child1 print 0

Received sem_V signal, sem_index=1, value = 1, queue: 0
going to insert process 0 to ready queue.
Parent print 1

Received sem_V signal, sem_index=1, value = 2, queue: 1
going to insert process 1 to ready queue.
Child0 print 1

Received sem_V signal, sem_index=1, value = 3, queue: 
Received calling sem_P index = 2
sem 2 is queueing: 1
ready queue empty, but process 0 is not in free/zombie state:2
ready queue empty, but process 1 is not in free/zombie state:3
ready queue empty, but process 2 is not in free/zombie state:2
Not handled: we should let system wait for unfinished processes.

System is shutting down with exit code -1.
linking  obj/util.a ...
Util lib has been build into "obj/util.a"
linking  obj/spike_interface.a ...
Spike lib has been build into "obj/spike_interface.a"
linking obj/riscv-pke ...
PKE core has been built into "obj/riscv-pke"
compiling user/app_semaphore.c
linking obj/app_semaphore ...
User app has been built into "obj/app_semaphore"
********************HUST PKE********************
spike obj/riscv-pke obj/app_semaphore
HTIF is available!
(Emulated) memory size: 2048 MB
In m_start, hartid:0
Enter supervisor mode...
PKE kernel start 0x0000000080000000, PKE kernel end: 0x0000000080074000, PKE kernel size: 0x0000000000074000 .
free physical memory address: [0x0000000080074000, 0x0000000087ffffff] 
kernel memory manager is initializing ...
KERN_BASE 0x0000000080000000
physical address of _etext is: 0x0000000080008000
kernel page table is on 
Switch to user mode...
sem 0 initialvalue 0
User application is loading.
Application: obj/app_semaphore
CODE_SEGMENT added at mapped info offset:4
Application program entry point (virtual address): 0x00000000000100e8
going to insert process 0 to ready queue.
going to schedule process 0 to run.
sem 1 initialvalue 1
sem 2 initialvalue 0
sem 3 initialvalue 0
1 2 3

User call fork.
will fork a child from parent 0.
sem 4 initialvalue 0
going to insert process 1 to ready queue.
Received calling sem_P index = 1
Parent print 0

childsem[0]=2

Received sem_V signal, sem_index=1, value = 2, queue: 
Received calling sem_P index = 1
sem 1 is queueing: 0
going to schedule process 1 to run.
User call fork.
will fork a child from parent 1.
sem 5 initialvalue 0
going to insert process 2 to ready queue.
Received calling sem_P index = 2
Child0 print 0

Received sem_V signal, sem_index=1, value = 3, queue: 
Received calling sem_P index = 2
sem 2 is queueing: 1
going to schedule process 2 to run.
Received calling sem_P index = 3
Child1 print 0

Received sem_V signal, sem_index=1, value = 1, queue: 0
going to insert process 0 to ready queue.
Parent print 1

childsem[0]=2

Received sem_V signal, sem_index=1, value = 2, queue: 1
going to insert process 1 to ready queue.
Child0 print 1

Received sem_V signal, sem_index=1, value = 3, queue: 
Received calling sem_P index = 2
sem 2 is queueing: 1
ready queue empty, but process 0 is not in free/zombie state:2
ready queue empty, but process 1 is not in free/zombie state:3
ready queue empty, but process 2 is not in free/zombie state:2
Not handled: we should let system wait for unfinished processes.

System is shutting down with exit code -1.
linking  obj/util.a ...
Util lib has been build into "obj/util.a"
linking  obj/spike_interface.a ...
Spike lib has been build into "obj/spike_interface.a"
compiling kernel/semaphore.c
linking obj/riscv-pke ...
PKE core has been built into "obj/riscv-pke"
linking obj/app_semaphore ...
User app has been built into "obj/app_semaphore"
********************HUST PKE********************
spike obj/riscv-pke obj/app_semaphore
HTIF is available!
(Emulated) memory size: 2048 MB
In m_start, hartid:0
Enter supervisor mode...
PKE kernel start 0x0000000080000000, PKE kernel end: 0x0000000080074000, PKE kernel size: 0x0000000000074000 .
free physical memory address: [0x0000000080074000, 0x0000000087ffffff] 
kernel memory manager is initializing ...
KERN_BASE 0x0000000080000000
physical address of _etext is: 0x0000000080008000
kernel page table is on 
Switch to user mode...
sem 0 initialvalue 0
User application is loading.
Application: obj/app_semaphore
CODE_SEGMENT added at mapped info offset:4
Application program entry point (virtual address): 0x00000000000100e8
going to insert process 0 to ready queue.
going to schedule process 0 to run.
sem 1 initialvalue 1
sem 2 initialvalue 0
sem 3 initialvalue 0
1 2 3

User call fork.
will fork a child from parent 0.
sem 4 initialvalue 0
going to insert process 1 to ready queue.
Received calling sem_P index = 1
Parent print 0

childsem[0]=2

Received sem_V signal, sem_index=2, value = 1, queue: 
Received calling sem_P index = 1
sem 1 is queueing: 0
going to schedule process 1 to run.
User call fork.
will fork a child from parent 1.
sem 5 initialvalue 0
going to insert process 2 to ready queue.
Received calling sem_P index = 2
Child0 print 0

Received sem_V signal, sem_index=3, value = 1, queue: 
Received calling sem_P index = 2
sem 2 is queueing: 1
going to schedule process 2 to run.
Received calling sem_P index = 3
Child1 print 0

Received sem_V signal, sem_index=1, value = 1, queue: 0
going to insert process 0 to ready queue.
Parent print 1

childsem[0]=2

Received sem_V signal, sem_index=2, value = 1, queue: 1
going to insert process 1 to ready queue.
Child0 print 1

Received sem_V signal, sem_index=3, value = 1, queue: 
Received calling sem_P index = 2
sem 2 is queueing: 1
ready queue empty, but process 0 is not in free/zombie state:2
ready queue empty, but process 1 is not in free/zombie state:3
ready queue empty, but process 2 is not in free/zombie state:2
Not handled: we should let system wait for unfinished processes.

System is shutting down with exit code -1.
linking  obj/util.a ...
Util lib has been build into "obj/util.a"
linking  obj/spike_interface.a ...
Spike lib has been build into "obj/spike_interface.a"
compiling kernel/semaphore.c
linking obj/riscv-pke ...
PKE core has been built into "obj/riscv-pke"
linking obj/app_semaphore ...
User app has been built into "obj/app_semaphore"
********************HUST PKE********************
spike obj/riscv-pke obj/app_semaphore
HTIF is available!
(Emulated) memory size: 2048 MB
In m_start, hartid:0
Enter supervisor mode...
PKE kernel start 0x0000000080000000, PKE kernel end: 0x0000000080074000, PKE kernel size: 0x0000000000074000 .
free physical memory address: [0x0000000080074000, 0x0000000087ffffff] 
kernel memory manager is initializing ...
KERN_BASE 0x0000000080000000
physical address of _etext is: 0x0000000080008000
kernel page table is on 
Switch to user mode...
sem 0 initialvalue 0
User application is loading.
Application: obj/app_semaphore
CODE_SEGMENT added at mapped info offset:4
Application program entry point (virtual address): 0x00000000000100e8
going to insert process 0 to ready queue.
going to schedule process 0 to run.
sem 1 initialvalue 1
sem 2 initialvalue 0
sem 3 initialvalue 0
1 2 3

User call fork.
will fork a child from parent 0.
sem 4 initialvalue 0
going to insert process 1 to ready queue.
Received calling sem_P index = 1
Parent print 0

childsem[0]=2

Received sem_V signal, sem_index=2, value = 1, queue: 
Received calling sem_P index = 1
sem 1 is queueing: 0
going to schedule process 1 to run.
User call fork.
will fork a child from parent 1.
sem 5 initialvalue 0
going to insert process 2 to ready queue.
Received calling sem_P index = 2
Child0 print 0

Received sem_V signal, sem_index=3, value = 1, queue: 
Received calling sem_P index = 2
sem 2 is queueing: 1
going to schedule process 2 to run.
Received calling sem_P index = 3
Child1 print 0

Received sem_V signal, sem_index=1, value = 1, queue: 0
going to insert process 0 to ready queue.
going to insert process 2 to ready queue.
Parent print 1

childsem[0]=2

Received sem_V signal, sem_index=2, value = 1, queue: 1
going to insert process 1 to ready queue.
going to insert process 0 to ready queue.
going to schedule process 2 to run.
Received calling sem_P index = 3
sem 3 is queueing: 2
Child0 print 1

Received sem_V signal, sem_index=3, value = 1, queue: 2
going to insert process 2 to ready queue.
going to insert process 1 to ready queue.
going to schedule process 0 to run.
Received calling sem_P index = 1
sem 1 is queueing: 000
Child1 print 1

Received sem_V signal, sem_index=1, value = 1, queue: 000
going to insert process 0 to ready queue.
going to insert process 2 to ready queue.
going to schedule process 1 to run.
Received calling sem_P index = 2
sem 2 is queueing: 111
Parent print 2

childsem[0]=2

Received sem_V signal, sem_index=2, value = 1, queue: 111
going to insert process 1 to ready queue.
going to insert process 0 to ready queue.
going to schedule process 2 to run.
Received calling sem_P index = 3
sem 3 is queueing: 222
Child0 print 2

Received sem_V signal, sem_index=3, value = 1, queue: 222
going to insert process 2 to ready queue.
going to insert process 1 to ready queue.
going to schedule process 0 to run.
Received calling sem_P index = 1
sem 1 is queueing: 000
Child1 print 2

Received sem_V signal, sem_index=1, value = 1, queue: 000
going to insert process 0 to ready queue.
going to insert process 2 to ready queue.
going to schedule process 1 to run.
Received calling sem_P index = 2
sem 2 is queueing: 111
Parent print 3

childsem[0]=2

Received sem_V signal, sem_index=2, value = 1, queue: 111
going to insert process 1 to ready queue.
going to insert process 0 to ready queue.
going to schedule process 2 to run.
Received calling sem_P index = 3
sem 3 is queueing: 222
Child0 print 3

Received sem_V signal, sem_index=3, value = 1, queue: 222
going to insert process 2 to ready queue.
going to insert process 1 to ready queue.
going to schedule process 0 to run.
Received calling sem_P index = 1
sem 1 is queueing: 000
Child1 print 3

Received sem_V signal, sem_index=1, value = 1, queue: 000
going to insert process 0 to ready queue.
going to insert process 2 to ready queue.
going to schedule process 1 to run.
Received calling sem_P index = 2
sem 2 is queueing: 111
Parent print 4

childsem[0]=2

Received sem_V signal, sem_index=2, value = 1, queue: 111
going to insert process 1 to ready queue.
going to insert process 0 to ready queue.
going to schedule process 2 to run.
Received calling sem_P index = 3
sem 3 is queueing: 222
Child0 print 4

Received sem_V signal, sem_index=3, value = 1, queue: 222
going to insert process 2 to ready queue.
going to insert process 1 to ready queue.
going to schedule process 0 to run.
Received calling sem_P index = 1
sem 1 is queueing: 000
Child1 print 4

Received sem_V signal, sem_index=1, value = 1, queue: 000
going to insert process 0 to ready queue.
going to insert process 2 to ready queue.
going to schedule process 1 to run.
Received calling sem_P index = 2
sem 2 is queueing: 111
Parent print 5

childsem[0]=2

Received sem_V signal, sem_index=2, value = 1, queue: 111
going to insert process 1 to ready queue.
going to insert process 0 to ready queue.
going to schedule process 2 to run.
Received calling sem_P index = 3
sem 3 is queueing: 222
Child0 print 5

Received sem_V signal, sem_index=3, value = 1, queue: 222
going to insert process 2 to ready queue.
going to insert process 1 to ready queue.
going to schedule process 0 to run.
Received calling sem_P index = 1
sem 1 is queueing: 000
Child1 print 5

Received sem_V signal, sem_index=1, value = 1, queue: 000
going to insert process 0 to ready queue.
going to insert process 2 to ready queue.
going to schedule process 1 to run.
Received calling sem_P index = 2
sem 2 is queueing: 111
Parent print 6

childsem[0]=2

Received sem_V signal, sem_index=2, value = 1, queue: 111
going to insert process 1 to ready queue.
going to insert process 0 to ready queue.
going to schedule process 2 to run.
Received calling sem_P index = 3
sem 3 is queueing: 222
Child0 print 6

Received sem_V signal, sem_index=3, value = 1, queue: 222
going to insert process 2 to ready queue.
going to insert process 1 to ready queue.
going to schedule process 0 to run.
Received calling sem_P index = 1
sem 1 is queueing: 000
Child1 print 6

Received sem_V signal, sem_index=1, value = 1, queue: 000
going to insert process 0 to ready queue.
going to insert process 2 to ready queue.
going to schedule process 1 to run.
Received calling sem_P index = 2
sem 2 is queueing: 111
Parent print 7

childsem[0]=2

Received sem_V signal, sem_index=2, value = 1, queue: 111
going to insert process 1 to ready queue.
going to insert process 0 to ready queue.
going to schedule process 2 to run.
Received calling sem_P index = 3
sem 3 is queueing: 222
Child0 print 7

Received sem_V signal, sem_index=3, value = 1, queue: 222
going to insert process 2 to ready queue.
going to insert process 1 to ready queue.
going to schedule process 0 to run.
Received calling sem_P index = 1
sem 1 is queueing: 000
Child1 print 7

Received sem_V signal, sem_index=1, value = 1, queue: 000
going to insert process 0 to ready queue.
going to insert process 2 to ready queue.
going to schedule process 1 to run.
Received calling sem_P index = 2
sem 2 is queueing: 111
Parent print 8

childsem[0]=2

Received sem_V signal, sem_index=2, value = 1, queue: 111
going to insert process 1 to ready queue.
going to insert process 0 to ready queue.
going to schedule process 2 to run.
Received calling sem_P index = 3
sem 3 is queueing: 222
Child0 print 8

Received sem_V signal, sem_index=3, value = 1, queue: 222
going to insert process 2 to ready queue.
going to insert process 1 to ready queue.
going to schedule process 0 to run.
Received calling sem_P index = 1
sem 1 is queueing: 000
Child1 print 8

Received sem_V signal, sem_index=1, value = 1, queue: 000
going to insert process 0 to ready queue.
going to insert process 2 to ready queue.
going to schedule process 1 to run.
Received calling sem_P index = 2
sem 2 is queueing: 111
Parent print 9

childsem[0]=2

Received sem_V signal, sem_index=2, value = 1, queue: 111
going to insert process 1 to ready queue.
going to insert process 0 to ready queue.
going to schedule process 2 to run.
Received calling sem_P index = 3
sem 3 is queueing: 222
Child0 print 9

Received sem_V signal, sem_index=3, value = 1, queue: 222
going to insert process 2 to ready queue.
going to insert process 1 to ready queue.
going to schedule process 0 to run.
User exit with code:0.
0
Received sem_V signal, sem_index=0, value = 1, queue: 
Child1 print 9

Received sem_V signal, sem_index=1, value = 1, queue: 22
going to insert process 2 to ready queue.
going to insert process 2 to ready queue.
going to schedule process 1 to run.
User exit with code:0.
1
Received sem_V signal, sem_index=4, value = 1, queue: 
Received sem_V signal, sem_index=0, value = 2, queue: 
going to schedule process 2 to run.
User exit with code:0.
2
Received sem_V signal, sem_index=5, value = 1, queue: 
Received sem_V signal, sem_index=4, value = 2, queue: 
no more ready processes, system shutdown now.
System is shutting down with exit code 0.
linking  obj/util.a ...
Util lib has been build into "obj/util.a"
linking  obj/spike_interface.a ...
Spike lib has been build into "obj/spike_interface.a"
compiling kernel/semaphore.c
linking obj/riscv-pke ...
PKE core has been built into "obj/riscv-pke"
linking obj/app_semaphore ...
User app has been built into "obj/app_semaphore"
********************HUST PKE********************
spike obj/riscv-pke obj/app_semaphore
HTIF is available!
(Emulated) memory size: 2048 MB
In m_start, hartid:0
Enter supervisor mode...
PKE kernel start 0x0000000080000000, PKE kernel end: 0x0000000080074000, PKE kernel size: 0x0000000000074000 .
free physical memory address: [0x0000000080074000, 0x0000000087ffffff] 
kernel memory manager is initializing ...
KERN_BASE 0x0000000080000000
physical address of _etext is: 0x0000000080008000
kernel page table is on 
Switch to user mode...
sem 0 initialvalue 0
User application is loading.
Application: obj/app_semaphore
CODE_SEGMENT added at mapped info offset:4
Application program entry point (virtual address): 0x00000000000100e8
going to insert process 0 to ready queue.
going to schedule process 0 to run.
sem 1 initialvalue 1
sem 2 initialvalue 0
sem 3 initialvalue 0
1 2 3

User call fork.
will fork a child from parent 0.
sem 4 initialvalue 0
going to insert process 1 to ready queue.
Parent print 0

childsem[0]=2


sem 1 is queueing: 0
going to schedule process 1 to run.
User call fork.
will fork a child from parent 1.
sem 5 initialvalue 0
going to insert process 2 to ready queue.
sem 2 is queueing: 1
going to schedule process 2 to run.
sem 3 is queueing: 2
ready queue empty, but process 0 is not in free/zombie state:3
ready queue empty, but process 1 is not in free/zombie state:3
ready queue empty, but process 2 is not in free/zombie state:3
Not handled: we should let system wait for unfinished processes.

System is shutting down with exit code -1.
linking  obj/util.a ...
Util lib has been build into "obj/util.a"
linking  obj/spike_interface.a ...
Spike lib has been build into "obj/spike_interface.a"
linking obj/riscv-pke ...
PKE core has been built into "obj/riscv-pke"
compiling user/app_semaphore.c
linking obj/app_semaphore ...
User app has been built into "obj/app_semaphore"
********************HUST PKE********************
spike obj/riscv-pke obj/app_semaphore
HTIF is available!
(Emulated) memory size: 2048 MB
In m_start, hartid:0
Enter supervisor mode...
PKE kernel start 0x0000000080000000, PKE kernel end: 0x0000000080074000, PKE kernel size: 0x0000000000074000 .
free physical memory address: [0x0000000080074000, 0x0000000087ffffff] 
kernel memory manager is initializing ...
KERN_BASE 0x0000000080000000
physical address of _etext is: 0x0000000080008000
kernel page table is on 
Switch to user mode...
sem 0 initialvalue 0
User application is loading.
Application: obj/app_semaphore
CODE_SEGMENT added at mapped info offset:4
Application program entry point (virtual address): 0x00000000000100e8
going to insert process 0 to ready queue.
going to schedule process 0 to run.
sem 1 initialvalue 1
sem 2 initialvalue 0
sem 3 initialvalue 0
1 2 3

User call fork.
will fork a child from parent 0.
sem 4 initialvalue 0
going to insert process 1 to ready queue.
Parent print 0


sem 1 is queueing: 0
going to schedule process 1 to run.
User call fork.
will fork a child from parent 1.
sem 5 initialvalue 0
going to insert process 2 to ready queue.
sem 2 is queueing: 1
going to schedule process 2 to run.
sem 3 is queueing: 2
ready queue empty, but process 0 is not in free/zombie state:3
ready queue empty, but process 1 is not in free/zombie state:3
ready queue empty, but process 2 is not in free/zombie state:3
Not handled: we should let system wait for unfinished processes.

System is shutting down with exit code -1.
linking  obj/util.a ...
Util lib has been build into "obj/util.a"
linking  obj/spike_interface.a ...
Spike lib has been build into "obj/spike_interface.a"
linking obj/riscv-pke ...
PKE core has been built into "obj/riscv-pke"
compiling user/app_semaphore.c
linking obj/app_semaphore ...
User app has been built into "obj/app_semaphore"
********************HUST PKE********************
spike obj/riscv-pke obj/app_semaphore
HTIF is available!
(Emulated) memory size: 2048 MB
In m_start, hartid:0
Enter supervisor mode...
PKE kernel start 0x0000000080000000, PKE kernel end: 0x0000000080074000, PKE kernel size: 0x0000000000074000 .
free physical memory address: [0x0000000080074000, 0x0000000087ffffff] 
kernel memory manager is initializing ...
KERN_BASE 0x0000000080000000
physical address of _etext is: 0x0000000080008000
kernel page table is on 
Switch to user mode...
sem 0 initialvalue 0
User application is loading.
Application: obj/app_semaphore
CODE_SEGMENT added at mapped info offset:4
Application program entry point (virtual address): 0x00000000000100e8
going to insert process 0 to ready queue.
going to schedule process 0 to run.
sem 1 initialvalue 1
sem 2 initialvalue 0
sem 3 initialvalue 0
User call fork.
will fork a child from parent 0.
sem 4 initialvalue 0
going to insert process 1 to ready queue.
Parent print 0


sem 1 is queueing: 0
going to schedule process 1 to run.
User call fork.
will fork a child from parent 1.
sem 5 initialvalue 0
going to insert process 2 to ready queue.
sem 2 is queueing: 1
going to schedule process 2 to run.
sem 3 is queueing: 2
ready queue empty, but process 0 is not in free/zombie state:3
ready queue empty, but process 1 is not in free/zombie state:3
ready queue empty, but process 2 is not in free/zombie state:3
Not handled: we should let system wait for unfinished processes.

System is shutting down with exit code -1.
